# -*- coding: utf-8 -*-
"""heart-disease-predict

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s5BLmKeV_dbeMalvtln4B9FFuClbRIIr
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

heart_data=pd.read_csv('/content/heart.csv')

heart_data.head()

heart_data.tail()

heart_data.shape

heart_data.info()

heart_data.describe()

heart_data['target'].value_counts()

heart_data.isnull().sum()

"""**Splitting the features and target**"""

X=heart_data.drop(columns='target',axis=1)
Y=heart_data['target']

print(X)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,stratify=Y,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

"""**Training LogisticRegression with training data**"""

model=LogisticRegression()

model.fit(X_train,Y_train)

"""**Accuracy prediction**"""

X_train_prediction=model.predict(X_train)
train_data_accuracy=accuracy_score(X_train_prediction,Y_train)

print("Accuracy on train data:",train_data_accuracy)

X_test_prediction=model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction,Y_test)

print("Accuracy on test data:",test_data_accuracy)

"""**Build a predictive System**"""

input=(62,0,0,138,294,1,1,106,0,1.9,1,3,2)
input_data_into_numpy=np.asarray(input)
input_data_reshaped=input_data_into_numpy.reshape(1,-1)
predict=model.predict(input_data_reshaped)
print(predict)
if(predict[0]==0):
  print("The person does not have heart disease")
else:
  print("Person is effected with herat disease")









